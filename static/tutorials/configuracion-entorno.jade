include ../.layout.jade

doctype html
html(lang=gw.language)
	- var path = [{label:'Pillars.js Tutorials',url:'/pillars/docs/tutorials/'},{label:'Configuración de ENV',url:'/pillars/docs/tutorials/configuracion-entorno.jade'}];
	+tutorials-layout("Pillars.js Tutorials - Configuración de ENV - 'make it easy!'",path)

		#title
			h1 Configuración de ENV
				em  Tutoriales Pillars.js
			
		section.descripcion
			h2#ENV ENV

			:markdown
				Cuando realizamos la inclusión del framework Pillars.js mediante `require("pillars")`, nos es devuelto un objeto ENV. Este objeto contiene: 
				+ **Configuración de parámetros que conforman el entorno**: parámetros del servidor http, parámetros de la base de datos, del servidor smtp, idioma con el que se responderá al cliente, etc.
				+ **Métodos** para arrancar/detener el servidor http y la conexión a la base de datos.
				+ **Métodos para añadir/eliminar controladores** (objetos route) a la aplicación. 
				+ **Métodos para añadir/eliminar plugins** a la aplicación. 
				+ **Propiedades** para conocer qué controladores y plugins están añadidos a la aplicación y en qué orden.


			:markdown
				Para definir una aplicación con los siguientes parámetros: 
				+ Disponible en dos idiomas, español e inglés.
				+ Que muestre los posibles errores
				+ Disponible en el puerto 80
				+ Que el tamaño máximo de subida de ficheros sean 50MB.

				Los setearíamos de la siguiente forma: 

			:highlight(lang='javascript')
				ENV.configure({
					languages: ['es','en'],
					debug: true,
					server:{
						port: 80,
						maxUploadSize: 1024*1024*50;
					}
				});

			:markdown
				> [Ver el objeto ENV en la referencia](/pillars/docs/reference/entorno.jade).
				
				Como hemos visto en el ejemplo de "Hola Mundo" se ejecuta `addRoute()`.... ver: variables globales.

			.msg.msg-icon.bg-alert Estamos completando la referencia. ¡Disculpa las molestias!. Síguenos en las redes sociales para estar al tanto de las actualizaciones de la documentación. 

