include ../.layout.jade

doctype html
html(lang=gw.language)
	- var path = [{label:'Pillars.js Tutorials',url:'/tutorials/'},{label:'Controladores',url:'/tutorials/controladores.jade'}];	
	+tutorials-layout("Pillars.js Tutorials - Controladores - 'make it easy!'",path)

		#title
			h1 Controladores
				em  Tutoriales Pillars.js

		section.cache
			h2#Introduccion Introducción
			:marked
				Se añaden **controladores de ruta** al proyecto para, dada un path, añadirle a éste cierta funcionalidad. 
				
				Un controlador se crea instanciando la clase Route y añadiéndolo a la propiedad `project.routes` del proyecto web.

				En este capítulo vamos a dar una visual, para profundizar consulta la [referencia]("../reference/enrutado.jade").
				La instancia del controlador creado se añade a `project.routes`.
				
		section.creacion
			h2#creacion Creación Controlador
			:marked
				Para crear un nueva ruta, se instancia un objeto de la clase Route y se añade al proyecto. La instancia se crea con dos parámetros, *configuración* y *manejador*.
				La *configuración* es un objeto, y el *manejador* es una función anónima.
			:highlight(lang='javascript')
				let myRoute = new Route({
					id :"example",
					path: "path-example",
					method:["GET","POST"]
				}, function(gw){
					gw.send("Hola desde el path example");
				});
				project.routes.add(myRoute);

			:marked
				La configuración de un objeto route es extensa, ya que permite una amplia configuración si se requiere, puedes consutarla [aquí]("../started/comenzando.jade#elementos"), en la sección *controladores y enrutado*.
				En cuanto al *manejador*, recibirá siempre por parámetro gangway, que es el objeto Pillars.js que aúna  request, response, y además los parsea y vitamita.
		


		section.metodos
			h2#metodos Métodos
			:marked
				Los métodos en `project.routes` para añadir, tomar o eliminar controladores son: 
			:highlight(lang='javascript')
				project.routes.add(myRoute);
				project.routes.remove("example");
				project.routes.get("example"); 

		section.activar
			h2#activar Activar/Desactivar controladores
			:marked
				Una propiedad de los controladores es `.active`. Por defecto es true, para desactivar un controlador, seteamos la propiedad a false. Esto hará que el controlador no actúe, es decir, permanecerá "desactivado". 
			:highlight(lang='javascript')
				project.routes.get("example").active=false;

		section.rutas
			h2#rutas Rutas parametrizadas
			:marked

			:marked
				Al instanciar el objeto route, podemos hacer uso de **rutas parametrizadas** al especificar el path.

			:highlight(lang='javascript')
				let myRoute1 = new Route({
					path: '/:var1/:var2/:var3'	
				},function(gw){
					gw.send(gw.pathParams);
				});

				// Consultando http://servidor/users/john/wayne
				// Devuelve: {"var1":"users", "var2":"john", "var3":"wayne"}
				

				let myRoute2 = new Route({
					path: '/*:restoPath'
				},function(gw){
					gw.send(gw.pathParams);
				});

				// Consultando http://servidor/users/john/wayne/photos
				// Devuelve: {"restoPath": "users/john/wayne/photos"}

				let myRoute3 = new Route({
					path: '/:var1/*:restoPath'
				},function(gw){
					gw.send(gw.pathParams);
				});

				// Consultando http://servidor/users/john/wayne/photos
				// Devuelve: {"var1":"users", "restoPath": "john/wayne/photos"}
				
			:marked
				
				