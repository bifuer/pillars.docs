include ../.layout.jade

doctype html
html(lang=gw.language)
	- var path = [{label:'Pillars.js Tutorials',url:'/pillars/docs/tutorials/'},{label:'HTTPS',url:'/pillars/docs/tutorials/https.jade'}];
	+tutorial-layout("Pillars.js Tutorials -HTTPS - 'make it easy!'",path)

		#title
			h1 Servidor HTTPS
				em  Pillars.js Tutorials
		
			:markdown
				En este tutorial vamos a configurar un servidor HTTPS en el puerto 3001. 

				Para comenzar debemos configurar en `ENV` la propiedad `ENV.server.https`. En esta propiedad estableceremos los ficheros .key y .crt necesarios en el servidor para realizar la autenticación HTTPS. Éstos para un entorno profesional se obtienen de una entidad certificadora, pero para un entorno de pruebas se pueden [autogenerar con OPENSSL](http://picodotdev.github.io/blog-bitix/2014/02/generar-y-convertir-claves-y-certificados-con-openssl/).

				Una vez generes los ficheros debes añadirlos al directorio de la aplicación y configurar `ENV.server.https`.

				Posteriormente debemos tener en cuenta toda nuestra estructura de objetos route, ya que en los *parámetros de configuración* deberemos configurar mediante la propiedad `https` si el objeto route responderá sólo para http, sólo para https o para ambos. La propiedad `https` podrá tener 3 valores: 
				+ undefined: valor predeterminado si no se declara la propiedad. El objeto route responderá tanto para http como para https.
				+ true: el objeto route sólo responde en https.
				+ false: el objeto route sólo responde en http.

			:highlight(lang='javascript')
				// Configuración de ENV para que sirva en el puerto 3001 conexión https
				require('pillars').start({
					https:{
						key:'localhost.key',
						cert: 'localhost.crt',
						port: '3001'
					}
				});


				// Configuración de un objeto route para que sólo responda en https
				var route_https = new Route ({path:'solohttps', https:true},function(gw){
					gw.send('Sólo verás este mensaje si te conectas por https');
				});

				// Configuración de un objeto route para que sólo responda en http
				var route_http = new Route ({path:'solohttp', https:flase},function(gw){
					gw.send('Sólo verás este mensaje si te conectas por http');
				});

				// Configuración de un objeto route para que responda tanto en http como en https
				var route_https_http = new Route ({path:'httpyhttps', https:flase}, function(gw){
					gw.send('Verás este mensaje si te conectas tanto por http como por https');
				});

				ENV.addRoute(route_https);
				ENV.addRoute(route_http);
				ENV.addRoute(route_https_http);

		


		

