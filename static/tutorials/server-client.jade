include ../.layout.jade

doctype html
html(lang=gw.language)
	- var path = [{label:'Pillars.js Tutorials',url:'/pillars/tutorials/'},{label:'Servidor-Cliente',url:'/pillars/tutorials/server-client.jade'}];
	+tutorials-layout("Pillars.js Tutorials - Envío de datos de Servidor a Cliente - 'make it easy!'",path)

		#title
			h1 Datos Servidor-Cliente
				em  Pillars.js Tutorials
		

		//- Summary
		section.summary
			h2#summary Sumario
			:markdown
				El envío de datos desde el servidor al cliente se realiza siempre dentro del manejador de un objeto route. Los métodos que realizan envío a cliente, y por tanto componen los encabezados HTTP pertinentes, son los siguientes métodos del objeto gangway: 

				+ [gw.send()](../reference/gangway.jade#method-send)
				+ [gw.html()](#)
				+ [gw.text()](#)
				+ [gw.json()](#)
				+ [gw.render()](#)
				+ [gw.file()](#)

				Todos estos métodos finalizan el objeto gangway. Una vez se ejecute este método, no se ejecutará ningún código más que hubiese después de esta llamada. 

				Como ya habrás leído en la Visión Global de Pillars.js, el framework es compatible con el protocolo por partes de HTTP, por lo que tenemos algunas curiosidades que contar en este tutorial ;).


		//- Examples
		section.examples
			h2#examples Ejemplos

			//- Example
			section.example
				h3#example-1 Control de Caché
				:markdown
					Tener en cuenta si el cliente ya descargó un contenido es bastante importante para **optimizar el tiempo de carga** en cliente, **peso de la respuesta** y **tiempo de proceso** en servidor.

					Para ello, antes de realizar un envío al cliente, podemos hacer uso del método gw.cacheck() que se ocupa de, dado un contenido a enviar, informarnos si el cliente tiene la versión más reciente de éste.

					**¿¿¿Esto lo hace el método render por defecto, de forma que si un template no ha cambiado.????**


				:highlight(lang='javascript')
					require("pillars").start();


			//- Example
			section.example
				h3#example-1 Envío de json
				:markdown
					El fichero deberá estar bien formado, de otro modo.

				:highlight(lang='javascript')
					require("pillars").start();


			//- Example
			section.example
				h3#example-1 Envío de archivo gran tamaño
				:markdown
					El código fuente de este ejemplo está en ....

				:highlight(lang='javascript')
					require("pillars").start();


			//- Example
			section.example
				h3#example-1 Video Streaming
				:markdown
					El código fuente de este ejemplo está en ....

				:highlight(lang='javascript')
					require("pillars").start();

			//- Example
			section.example
				h3#example-1 Cookies
				:markdown
					Las Cookies se envían 

				:highlight(lang='javascript')
					require("pillars").start();