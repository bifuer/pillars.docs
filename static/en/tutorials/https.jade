include ../.layout.jade

doctype html
html(lang=gw.language)
	- var path = [{label:'Pillars.js Tutorials',url:'/pillars/docs/tutorials/'},{label:'HTTPS',url:'/pillars/docs/tutorials/https.jade'}];
	+tutorials-layout("Pillars.js Tutorials - Http/s - 'make it easy!'",path)
		#title
			h1 HTTP/s
				em  Pillars.js Tutorials
		
			:marked
				Pillars.js offers a http service built-in. Meaning that in the `project.services` property in the project that contains all the services added to the project, we have a service with identifier **http** inserted.
				
				This service, starts on port 8080 by default, of course the configuration can be change, to access to this configuration first we need to use `.get(identificator)`, and then you can:
				- config: `.configure(objeto configuración)`
				- start: `.start()`
				- stop: `.stop()`

			:highlight(lang='javascript')
				const project = require("pillars");

				project.services.get("http").configure({
					port:3000,
					timeout:8000
				}).start();
			:marked
				If need to know more about services, go to the [refer]("../reference/servicios.jade").
				
				You can create more http and https services.
				
		section.http
			h2#http Creación de un servicio http
			:marked
				Para crear un servicio  http o https, instanciamos la Clase HttpService, y la añadimos a `project.services`. 
				Para un servicio http, tan sólo es necesario especficar en la configuración: 
				- id, Identificador. 
				- port, Puerto en el que se montará el servicio creado. 

			:highlight(lang='javascript')
				const project = require('pillars');

				// Servicio http
				project.services.add((new HttpService({
				  id:'http2',
				  port: 3003
				})).start()); // Se pueden encadenar métodos
				
				//...

				project.services.get('http2').stop();
				
				//...

		section.https
			h2#https Creación de un servicio https
			:marked
				Para crear un servicio https es necesario crear un certificado SSL, existen varias herramientas para crearlo, como OpenSSL. 
				Una vez creado, tan sólo tienes que especificar en la configuración, las propiedades `key` y `cert` con los archivos creados.

			:highlight(lang='javascript')
				const project = require('pillars');

				// Servicio https
				const fs = require('fs');
				project.services.add((new HttpService({
				  id:'https',
				  key: fs.readFileSync('./localhost.key'),
				  cert: fs.readFileSync('./localhost.crt'),
				  port: 3001
				})).start());

				//...
				
				project.services.get('https').stop();

				//...


				
		


		

