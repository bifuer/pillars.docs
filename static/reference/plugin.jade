include ../.layout.jade

doctype html
html(lang=gw.language)
	- var path = [{label:'Pillars.js Reference',url:'/pillars/docs/reference/'},{label:'Clase Plugin',url:'/pillars/docs/reference/plugin.jade'}];
	+reference-layout("Pillars.js Reference - Clase Plugin - 'make it easy!'",path)

		#title
			h1 Clase Plugin
				em  Pillars.js Reference
			a.source(href="https://github.com/bifuer/pillars/blob/master/lib/Plugin.js") Source

		//- Summary
		section.summary
			h2#summary Sumario
			:markdown
				La Clase Plugin permiten ampliar las funcionalidades del framework. 

				Estas funcionalidades pueden afectar a todas las rutas del proyecto o sólo a aquellas en las que la configuración del objeto route lo indique.
					
		//- Syntax
		section.syntax
			h2#syntax Constructor
			:codesyntax
				plugin = new Plugin( configuration, handler );

			:markdown
				+ *configuration*: opcional. Objeto de configuración del plugin. En la creación del plugin se pueden configurar los siguientes parámetros: 
					+ [id](#property-id): Identificador del plugin.					
					+ [active](#property-active): si está activo o no.

				+ *handler*: opcional. Controlador que se ejecutará el plugin. El controller siempre recibe como parámetro el [objeto gangway](gangway.jade) y **next**.

				
			:highlight(lang='javascript')
				// Creación más básica de un objeto plugin. 
				// Al omitir el objeto de configuración se establecen los valores por defecto

				var plugin = new Plugin(function(gw, next){
					next();
				});


				// Creación de un objeto plugin con id 'web' y path '/web'. 
				// El manejador envía al cliente el renderizado del archivo example.jade

				var plugin = new Plugin(
					{
						id: "web",
						path: "/web/"
					},
					function(gw, next){
						gw.render("example.jade");
					}
				);


		//- Description
		section.description
			h2#description Descripción
			:markdown
				La Clase Plugin es primordial en el funcionamiento del framework, ya que éste está construido a base de Plugins que realizan diversas funciones. 	

				Ver [Plugins integrados](https://github.com/bifuer/pillars/tree/master/lib/plugins) en Pillars.js. 		


		//- Properties
		section.properties
			h2#properties Propiedades

			//- Property
			section.property
				h3#property-id: code
					small Plugin.prototype
					| .id

				//- Property description
				section.description
					:markdown
						Identificador del objeto plugin.

			//- Property
			section.property
				h3#property-active: code
					small Plugin.prototype
					| .active

				//- Property description
				section.description
					:markdown
						**Boolean** que indica si el plugin está activo o no. Por defecto es **true**.
			

		//- Eventos
		section.yyy
			h2#yyy yyy

			section.yyy
				h3#property-vvv: code
					| bbb

				:markdown
					abc

				:highlight(lang='javascript')
					//Capturar el evento
					ENV.on('idUpdate');
		